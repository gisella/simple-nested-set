<?php

use NestedSet\Application\Validator\NodeRequestValidator;
use NestedSet\Application\Validator\RequestValidator;
use PHPUnit\Framework\TestCase;

final class RequestValidatorTest extends TestCase
{
    private $testObj;
    private $params = ["param1" => 1, "param2" => 2, "param3" => ''];

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->testObj = new RequestValidator($this->params);
    }

    public function testParamExists()
    {
        self::assertTrue($this->testObj->paramExists('param1'));
        self::assertFalse($this->testObj->paramExists('param10'));
        self::assertFalse($this->testObj->paramExists('param3'));
    }

    public function testCheckMandatoryParams()
    {
        self::assertTrue($this->testObj->checkMandatoryParams(['param1', 'param2']));
        self::assertFalse($this->testObj->checkMandatoryParams(['param1', 'param10']));
    }

    public function testGetParam()
    {
        self::assertEquals($this->testObj->getParam('param1'), $this->params['param1']);
        self::assertEquals($this->testObj->getParam('param2'), $this->params['param2']);
    }
}
